{"version":3,"sources":["Components/GlobalStyles.js","API.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Components/IMDB.js","Components/Footer.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TvPresenter.js","Routes/TV/index.js","Routes/TV/TvContainer.js","Components/SubTitle.js","Components/VideoSlider.js","Components/Season.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/App.js","index.js"],"names":["globalStyles","createGlobalStyle","reset","api","axios","create","baseURL","params","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","animate","keyframes","Ul","ul","Li","li","Loader","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMove","to","role","aria-label","length","substring","LinkTo","a","footer","IMDB","href","target","rel","ImdbContainer","p","Footer","HomePresenter","nowPlaying","popular","upcoming","error","loading","Helmet","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","handleSubmit","movieResults","tvResults","searchTerm","updateTerm","onSubmit","value","placeholder","onChange","show","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","TvPresenter","topRated","airingToday","TvContainer","SubTitle","Video","Error","VideoSlider","key","width","url","ItemContainer","Item","ShowName","Date","imgURL","Season","seasons","name","air_date","Backdrop","bgImage","Content","Data","TitleContiner","h3","Divider","Overview","Cover","OverviewContainer","DetailPresenter","result","backdrop_path","imdb_id","runtime","episode_run_time","genres","genre","index","overview","videos","DetailContainer","pathname","location","isMovie","includes","match","push","history","parsedId","parseInt","isNaN","HeaderS","header","List","current","SLink","Link","withRouter","AppRouter","Header","path","exact","component","Home","Tv","Search","Detail","from","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b384a66a.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        padding-top:50px;\n        font-size:12px;\n        color:white;\n        background-color:rgba(20,20,20,1);\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    }\n`;\n\nexport default globalStyles;\n","import axios from 'axios';\n\n\nconst api = axios.create({\n    baseURL : 'https://api.themoviedb.org/3/',\n    params:{\n        \"api_key\" : \"299f0174d405078e52f6aa0543dfbf85\",\n    }\n});\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: (id)=> api.get(`movie/${id}`,{\n        params:{\n            append_to_response: 'videos'\n        }\n    }),\n    search: (term)=> api.get('search/movie',{\n        params:{\n            query: encodeURIComponent(term)\n        }\n    })\n  };\n\n  export const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: (id)=> api.get(`tv/${id}`,{\n        params:{\n            append_to_response: 'videos'\n        }\n    }),\n    search: (term)=> api.get('search/tv',{\n        params:{\n            query: encodeURIComponent(term)\n        }\n    })\n  };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    :not(:last-child){\n        margin-bottom:50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size:16px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top:25px;\n    display:grid;\n    grid-template-columns: repeat(auto-fill,125px);\n    grid-gap:25px;\n`;\n\nconst Section = ({title, children}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n)\n\nSection.propTypes ={\n    title:PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\nexport default Section","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst animate = keyframes`\n    0%,40%,100%{\n      transform:scale(0.2);  \n    }\n    20%{\n      transform:scale(1);  \n    }\n`;\n\nconst Ul = styled.ul`\n    display: flex;\n`;\n\nconst Li = styled.li`\n    width:40px;\n    height:40px;\n    background:#fff;\n    border-radius:50%;\n    animation: ${animate} 1.6s ease-in-out infinite;\n    :nth-child(1){\n        animation-delay: -1.4s;\n        background:#ffff00;\n        box-shadow: 0 0 50px #ffff00;\n    }\n    :nth-child(2){\n        animation-delay: -1.2s;\n        background:#76FF03;\n        box-shadow: 0 0 50px #76FF03;\n    }\n    :nth-child(3){\n        animation-delay: -1s;\n        background:#F06292;\n        box-shadow: 0 0 50px #F06292;\n    }\n    :nth-child(4){\n        animation-delay: -0.8s;\n        background:#4FC3F7;\n        box-shadow: 0 0 50px #4FC3F7;\n    }\n    :nth-child(5){\n        animation-delay: -0.6s;\n        background:#BA68C8;\n        box-shadow: 0 0 50px #BA68C8;\n    }\n    :nth-child(6){\n        animation-delay: -0.4s;\n        background:#F57C00;\n        box-shadow: 0 0 50px #F57C00;\n    }\n    :nth-child(7){\n        animation-delay: -0.2s;\n        background:#673AB7;\n        box-shadow: 0 0 50px #673AB7;\n    }\n`;\n\n\n\nconst Loader = () => (\n  <Container>\n      <Ul>\n          <Li></Li>\n          <Li></Li>\n          <Li></Li>\n          <Li></Li>\n          <Li></Li>\n          <Li></Li>\n          <Li></Li>\n      </Ul>\n  </Container>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n    width:100vw;\n    display:flex;\n    justify-content:center;\n`;\n\nconst Text = styled.span`\n    color: ${props => props.color};\n    font-weight:600;\n    font-size:25px;\n`;\n\nconst Message = ({ text,color }) => (\n  <Container>\n    <Text color={color} >{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    font-size:12px;\n`;\n\nconst Image = styled.div`\n    background-image:url(${props => props.bgUrl});\n    height:180px;\n    background-size:cover;\n    border-radius:4px;\n    background-position:center center;\n    transition: opacity .2s linear;\n`;\n\nconst Rating = styled.span`\nposition:absolute;\n    bottom: 5px;\n    right:5px;\n    opacity:0;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom:5px;\n    &:hover{\n        ${Image}{\n            opacity:0.3;\n        }\n        ${Rating}{\n            opacity:1;\n        }\n    }\n    position:relative;\n`;\n\n\n\nconst Title = styled.span`\n    display:block;\n    margin-bottom:3px;\n`;\n\nconst Year = styled.span`\n    font-size:10px;\n    color:rgba(255,255,255,0.5);\n`;\n\nconst Poster = ({ id,imageUrl, title, rating, year, isMove = false }) => (\n  <Link to={isMove ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image bgUrl={imageUrl? `https://image.tmdb.org/t/p/w300${imageUrl}`: (\"https://images.unsplash.com/photo-1579990087546-177610dff49b?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=630&q=80\") } />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            🌟\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title.length >15 ? `${title.substring(0,18)}...` :title }</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMove: PropTypes.bool,\n};\n\nexport default Poster","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst LinkTo = styled.a`\n  margin-left: 10px;\n  font-size: 25px;\n  border: 1px solid #fcd303;\n  color: black;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: #fcd303;\n  font-weight: 700;\n  display: block;\n  text-align: center;\n  width: ${(props) => (props.footer ? \"100px\" : null)};\n`;\n\nconst IMDB = ({ id, footer = false }) => (\n  <>\n    {footer ? (\n      <LinkTo\n        href={\"https://www.imdb.com\"}\n        target=\"_blank\"\n        footer={footer}\n        rel=\"noopener noreferrer\"\n      >\n        IMDB\n      </LinkTo>\n    ) : (\n      <LinkTo\n        href={id && `https://www.imdb.com/title/${id}`}\n        target=\"_blank\"\n        footer={footer}\n        rel=\"noopener noreferrer\"\n      >\n        IMDB\n      </LinkTo>\n    )}\n  </>\n);\n\nIMDB.propTypes = {\n  id: PropTypes.string,\n  footer: PropTypes.bool,\n};\n\nexport default IMDB;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport IMDB from \"./IMDB\";\n\nconst Container = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst ImdbContainer = styled.div``;\n\nconst Text = styled.p`\n  font-size: 3em;\n  font-weight: 700;\n  text-shadow: 1px 1px 2px grey, 0 0 0.3em white, 0 0 0.1em white;\n`;\n\nconst Footer = () => (\n  <Container>\n    <Text>GOODFLIX</Text>\n    <ImdbContainer>\n      <IMDB footer={true} />\n    </ImdbContainer>\n  </Container>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\nimport Footer from \"Components/Footer\";\n\nconst Container = styled.div`\n  padding: 20px;\n  position: relative;\n  padding-bottom: 100px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Goodflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        <Container>\n          {nowPlaying && nowPlaying.length > 0 && (\n            <Section title={\"Now Playing\"}>\n              {nowPlaying.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  isMove={true}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {upcoming && upcoming.length > 0 && (\n            <Section title={\"Coming Soon\"}>\n              {upcoming.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  isMove={true}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {popular && popular.length > 0 && (\n            <Section title={\"Popular\"}>\n              {popular.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  isMove={true}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color=\"#e74c3c\" text={error} />}\n          <Footer />\n        </Container>\n      </>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer","import { moviesApi } from \"API\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class HomeContainer extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({ nowPlaying, upcoming, popular });\n    } catch {\n      this.setState({\n        error: \"Cant' find Movies informations.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, popular, upcoming, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        popular={popular}\n        upcoming={upcoming}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\nimport Footer from \"Components/Footer\";\n\nconst Container = styled.div`\n  padding: 20px;\n  position: relative;\n  padding-bottom: 100px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  handleSubmit,\n  movieResults,\n  tvResults,\n  searchTerm,\n  updateTerm,\n  loading,\n  error,\n}) => (\n  <>\n    {\" \"}\n    <Helmet>\n      <title>Search | Goodflix</title>\n    </Helmet>\n    {\n      <>\n        <Container>\n          <Form onSubmit={handleSubmit}>\n            <Input\n              value={searchTerm}\n              placeholder=\"Search Movies or TV Shows...\"\n              onChange={updateTerm}\n            ></Input>\n          </Form>\n          {loading ? (\n            <Loader />\n          ) : (\n            <>\n              {movieResults && movieResults.length > 0 && (\n                <Section title={\"Movie Results\"}>\n                  {movieResults.map((movie) => (\n                    <Poster\n                      key={movie.id}\n                      id={movie.id}\n                      isMove={true}\n                      imageUrl={movie.poster_path}\n                      title={movie.original_title}\n                      rating={movie.vote_average}\n                      year={\n                        movie.release_date && movie.release_date.substring(0, 4)\n                      }\n                    />\n                  ))}\n                </Section>\n              )}\n              {tvResults && tvResults.length > 0 && (\n                <Section title={\"TV Show Results\"}>\n                  {tvResults.map((show) => (\n                    <Poster\n                      key={show.id}\n                      id={show.id}\n                      imageUrl={show.poster_path}\n                      title={show.original_name}\n                      rating={show.vote_average}\n                      year={\n                        show.first_air_date &&\n                        show.first_air_date.substring(0, 4)\n                      }\n                    />\n                  ))}\n                </Section>\n              )}\n            </>\n          )}\n          {error && <Message color=\"#e74c3c\" text={error} />}\n          {tvResults &&\n            movieResults &&\n            tvResults.length === 0 &&\n            movieResults.length === 0 && (\n              <Message text=\"Nothing Found\" color=\"#95a5a6\" />\n            )}\n          {movieResults && tvResults && <Footer />}\n        </Container>\n      </>\n    }\n  </>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer","import { moviesApi, tvApi } from \"API\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class SearchContainer extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({ searchTerm: value });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    try {\n      this.setState({ loading: true });\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\nimport Footer from \"Components/Footer\";\n\nconst Container = styled.div`\n  padding: 20px;\n  position: relative;\n  padding-bottom: 100px;\n`;\n\nconst TvPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Goodflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title={\"Top Rated\"}>\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title={\"Popular\"}>\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title={\"Popular\"}>\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        <Footer />\n      </Container>\n    )}\n  </>\n);\n\nTvPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TvPresenter;\n","import TvContainer from './TvContainer'\n\nexport default TvContainer","import React from \"react\";\nimport { tvApi } from \"API\";\nimport TvPresenter from \"./TvPresenter\";\n\nexport default class TvContiner extends React.Component {\n  state = {\n    loading: true,\n    error: null,\n    topRated: null,\n    popular: null,\n    airingToday: null,\n  };\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Cant' find TV Shows informations.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TvPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Title = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 10px;\n`;\n\nconst SubTitle = ({ text }) => <Title>{text}</Title>;\n\nSubTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default SubTitle;\n","import React from \"react\";\nimport ReactPlayer from \"react-player/youtube\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport SubTitle from \"./SubTitle\";\n\nconst Container = styled.div`\n  max-width: 600px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Video = styled.div`\n  width: 100%;\n`;\n\nconst Error = styled.p``;\n\nconst VideoSlider = ({ results }) => {\n  return results[0].key ? (\n    <Container>\n      <SubTitle text={\"Video\"} />\n      <Video>\n        <ReactPlayer\n          width={\"100%\"}\n          url={`https://www.youtube.com/watch?v=${results[0].key}`}\n        />\n      </Video>\n    </Container>\n  ) : (\n    <Error>No Video</Error>\n  );\n};\nVideoSlider.propTypes = {\n  results: PropTypes.array.isRequired,\n};\n\nexport default VideoSlider;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport SubTitle from \"./SubTitle\";\n\nconst Container = styled.div`\n  width: 100%;\n  margin-top: 15px;\n`;\nconst ItemContainer = styled.div`\n  width: 100%;\n  display: flex;\n  overflow-x: scroll;\n`;\n\nconst Item = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  &:not(:last-child) {\n    margin-right: 5px;\n  }\n`;\n\nconst ShowName = styled.span`\n  margin: 5px 0px;\n  font-size: 16px;\n`;\n\nconst Date = styled.span`\n  font-size: 16px;\n`;\n\nconst Poster = styled.div`\n  border-radius: 5px;\n  background-image: url(${(props) => props.imgURL});\n  width: 200px;\n  height: 295px;\n  background-position: center center;\n  background-size: cover;\n`;\n\nconst Season = ({ seasons }) => (\n  <Container>\n    <SubTitle text={\"Seasons\"} />\n    <ItemContainer>\n      {seasons.map((show) => (\n        <Item>\n          <Poster\n            imgURL={`https://image.tmdb.org/t/p/w200${show.poster_path}`}\n          />{\" \"}\n          <ShowName>{show.name}</ShowName>\n          <Date>Year: {show.air_date.substring(0, 4)}</Date>\n        </Item>\n      ))}\n    </ItemContainer>\n  </Container>\n);\n\nSeason.propTypes = {\n  seasons: PropTypes.array.isRequired,\n};\n\nexport default Season;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Helmet from \"react-helmet\";\nimport VideoSlider from \"Components/VideoSlider\";\nimport IMDB from \"Components/IMDB\";\nimport Season from \"Components/Season\";\nimport SubTitle from \"Components/SubTitle\";\nimport Footer from \"Components/Footer\";\n\nconst Container = styled.div`\n  height: calc(100vh - 150px);\n  width: 100%;\n  position: relative;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\nconst Data = styled.div`\n  padding: 40px;\n  width: 60%;\n  overflow: scroll;\n`;\n\nconst TitleContiner = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  align-items: center;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst Cover = styled.div`\n  z-index: 1;\n  width: 40%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst OverviewContainer = styled.div``;\n\nconst Video = styled.div`\n  width: 100%;\n  margin-top: 15px;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Goodflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <>\n      <Container>\n        <Helmet>\n          <title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}{\" \"}\n            | Goodflix\n          </title>\n        </Helmet>\n        <Backdrop\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n        />\n        <Content>\n          <Cover\n            bgImage={\n              result.poster_path\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                : null\n            }\n          />\n          <Data>\n            <TitleContiner>\n              <Title>\n                {result.original_title\n                  ? result.original_title\n                  : result.original_name}\n              </Title>\n              {result.imdb_id && <IMDB id={result.imdb_id} />}\n            </TitleContiner>\n            <ItemContainer>\n              <Item>\n                {result.release_date\n                  ? result.release_date.substring(0, 4)\n                  : result.first_air_date.substring(0, 4)}\n              </Item>\n              <Divider>·</Divider>\n              <Item>\n                ⏱ {result.runtime ? result.runtime : result.episode_run_time[0]}{\" \"}\n                min\n              </Item>\n              <Divider>·</Divider>\n              <Item>\n                {result.genres &&\n                  result.genres.map((genre, index) =>\n                    index === result.genres.length - 1\n                      ? genre.name\n                      : `${genre.name} / `\n                  )}\n              </Item>\n            </ItemContainer>\n            <OverviewContainer>\n              <SubTitle text={\"Overview\"} />\n              <Overview>{result.overview}</Overview>\n            </OverviewContainer>\n            {result.videos && result.videos.results.length >= 1 && (\n              <Video>\n                <VideoSlider results={result.videos.results} />\n              </Video>\n            )}\n\n            {result.seasons && result.seasons.length >= 1 && (\n              <Season key={result.id} seasons={result.seasons} />\n            )}\n          </Data>\n        </Content>\n      </Container>\n      <Footer />\n    </>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from './DetailContainer'\n\nexport default DetailContainer","import { moviesApi, tvApi } from \"API\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nconst HeaderS = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  z-index: 10;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: solid 3px\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.3s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Text = styled.p`\n  margin-right: 20px;\n  font-size: 2.5em;\n  font-weight: 700;\n  text-shadow: 1px 1px 2px grey, 0 0 0.3em white, 0 0 0.1em white;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <HeaderS>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n    <Text>\n      <SLink to=\"/\">GOODFLIX</SLink>\n    </Text>\n  </HeaderS>\n));\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport Search from \"Routes/Search/index\";\nimport Tv from \"Routes/TV/index\";\nimport Detail from \"Routes/Detail\";\nimport Header from \"./Header\";\n\nconst AppRouter = () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" component={Tv} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n\nexport default AppRouter;\n","import React from 'react';\nimport GlobalStyles from 'Components/GlobalStyles';\nimport Router from 'Components/Router';\n\nfunction App() {\n  return (\n    <>\n    <Router />\n    <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}